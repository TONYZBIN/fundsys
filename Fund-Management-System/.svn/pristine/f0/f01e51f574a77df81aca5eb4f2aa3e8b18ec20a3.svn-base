package edu.fjut.fundsys.action;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import edu.fjut.fundsys.domain.AdminUser;
import edu.fjut.fundsys.domain.Fund;
import edu.fjut.fundsys.exception.DataAccessException;
import edu.fjut.fundsys.jwt.Jwt;
import edu.fjut.fundsys.service.AdminUserService;

public class AdminUserAction extends BaseAction {
    private String userNo;
    private String userPwd;
    /* */
    private AdminUserService adminUserService;
    /*注册操作返回token*/
    private String token;
    /*基金对象：
     * fund.FundName; fund.FundPrice; fund.FundDescribe; fund.date  
     **/
    private Fund fund;
    
    private Map<String, Object> data=null;
    private int resultcode;
    private String message;
    
    
  


	public Map<String, Object> getData() {
		return data;
	}
    
	public int getResultcode() {
		return resultcode;
	}

	public String getMessage() {
		return message;
	}

	public void setFund(Fund fund) {
		this.fund = fund;
	}
	
	public Fund getFund() {
		return fund;
	}

	public void setAdminUserService(AdminUserService adminUserService) {
		this.adminUserService = adminUserService;
	}
	public void setUserNo(String userNo) {
		this.userNo = userNo;
	}

	public void setUserPwd(String userPwd) {
		this.userPwd = userPwd;
	}
	
	/**
	 * 操作员登录操作
	 * 如果用户名和密码正确，生成一个token返回
	 * @return
	 */
	public String adminLogin(){
		//System.out.println(ServletActionContext.getRequest().getRequestURI());
    data=new HashMap<String, Object>();
 
		AdminUser adminUser=new AdminUser();
		adminUser.setUserNo(userNo);
		adminUser.setUserPwd(userPwd);
		if( adminUserService.checkUser(adminUser)){
			Map<String , Object> payload=new HashMap<String, Object>();
			Date date=new Date();
			payload.put("uid",userNo);//用户ID
			payload.put("iat", date.getTime());//生成时间
			payload.put("ext",date.getTime()+1000*60*60);//过期时间1小时
			token=Jwt.createToken(payload);
	        data.put("token", token);
	        data.put("userNo", userNo);
	        resultcode=0;
	        message="认证成功";
			

		}
		else {	
	        resultcode=-1;
	        message="认证失败";
			  }
		return "adminlogin";
	}
	/**
	 * 添加基金操作
	 * 需要携带token进行身份验证
	 */
	public String adminFundAdd(){
		 data=new HashMap<String, Object>();
		//System.out.println(fund.getDate());
		 try {
			adminUserService.fundAdd(fund);
	        data.put("FundName", fund.getFundName());
	        resultcode=0;
	        message="添加成功";
		} catch (DataAccessException e) {
	        data.put("FundName", fund.getFundName());
	        resultcode=-1;
	        message=e.getMessage();
		}
	

		return "fundadd";
	}
	
}
