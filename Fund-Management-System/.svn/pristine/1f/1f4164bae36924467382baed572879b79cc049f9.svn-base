package edu.fjut.fundsys.dao;

import java.util.List;

import org.springframework.orm.hibernate3.support.HibernateDaoSupport;

import edu.fjut.fundsys.domain.AdminUser;
import edu.fjut.fundsys.domain.Fund;
import edu.fjut.fundsys.exception.DataAccessException;

public class AdminUserDaoImpl extends HibernateDaoSupport implements AdminUserDao {

	@Override
	public void checkUser(AdminUser user) {
		
	AdminUser adminUser=(AdminUser) this.getHibernateTemplate().get(AdminUser.class,user.getUserNo());
		
		if(adminUser==null) {throw new DataAccessException("用户不存在"); };
	    if(!adminUser.getUserPwd().equals(user.getUserPwd())){throw new DataAccessException("用户存在,但密码错误");}
	  
	}

	@Override
	public void fundAdd(Fund fund) {
		try {
			this.getHibernateTemplate().save(fund);
		} catch (Exception e) {
			throw new DataAccessException("基金名已经存在");
		}
		
	}

	@Override
	public List<Fund> fundList() {
	 return	this.getHibernateTemplate().find("from Fund f order by f.FundNo desc");
	}

	@Override
	public Fund getFundById(Integer FundNo) {
	    return (Fund) this.getHibernateTemplate().get(Fund.class, FundNo);
	}

	@Override
	public void updateFund(Fund fund) {
		 Fund newFund=this.getFundById(fund.getFundNo());
		 newFund.setFundName(fund.getFundName());
		 newFund.setFundPrice(fund.getFundPrice());
		 newFund.setFundDescribe(fund.getFundDescribe());
		 newFund.setFundStatus(fund.getFundStatus());
		 this.getHibernateTemplate().update(newFund);
		 
	    
	}

	@Override
	public void deleteFund(Integer fundNo) {
		 Fund fund=this.getFundById(fundNo);
		 this.getHibernateTemplate().delete(fund);
		
	}

	@Override
	public void batchDeleteFund(List<Integer> fundNoList) {
	     for (Integer integer : fundNoList) {
	    	 Fund fund=this.getFundById(integer);
			 this.getHibernateTemplate().delete(fund);
		}
		 
	
		
	}



}
